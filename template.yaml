AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Lambda + AWS API Gateway + Express + New Relic Browser

Parameters:
  BucketName:
    Type: String
    Default: aws-lambda-nr-postdeploy
  NRAccountId:
    Type: String
  NRInsightsQueryKey:
    Type: String

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors: "'*'"

      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: !Sub 's3://${BucketName}/swagger.yaml'

  #
  # Express.js Application
  #
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./express-app
      Handler: index.handler
      Runtime: nodejs6.10
      Timeout: 30
      MemorySize: 512
      AutoPublishAlias: live
      DeploymentPreference:
        Type: Canary10Percent5Minutes
        Hooks:
          PostTraffic: !Ref PostTrafficHookFunction
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /
            Method: ANY
        Greeting:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /greeting
            Method: ANY
  #
  # Synthetic Web Traffic Generator (using headless Chromium)
  # Visits the external URL 3x minute using 3 Cloudwatch Events
  #
  # SyntheticTrafficFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     # lambdium v0.1.2
  #     CodeUri: s3://lambdium-upload-bucket/4fcc083b4f8302daf6c68d19001d8c8d
  #     Runtime: nodejs6.10
  #     Handler: index.handler
  #     MemorySize: 1154
  #     Timeout: 25
  #     Events:
  #       CheckWebsiteScheduledEvent:
  #         Type: Schedule
  #         Properties:
  #           Schedule: rate(1 minute)
  #       CheckWebsiteScheduledEvent2:
  #         Type: Schedule
  #         Properties:
  #           Schedule: rate(1 minute)
  #       CheckWebsiteScheduledEvent3:
  #         Type: Schedule
  #         Properties:
  #           Schedule: rate(1 minute)
  #       UserError:
  #         Type: Schedule
  #         Properties:
  #           Schedule: rate(3 minutes)
  #           Input: '{"Base64Script": "JGJyb3dzZXIuZ2V0KCdodHRwczovL295M2tmNDlvNzkuZXhlY3V0ZS1hcGkudXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vUHJvZCcpLnRoZW4oZnVuY3Rpb24oKXsNCiAgcmV0dXJuICRicm93c2VyLmZpbmRFbGVtZW50KCRkcml2ZXIuQnkuaWQoJ2Vycm9yLWJ0bicpKS50aGVuKGZ1bmN0aW9uKGVsZW1lbnQpew0KICAgIGNvbnNvbGUubG9nKCdjbGlja2luZyBlcnJvciBidXR0b24hJyk7DQogICAgcmV0dXJuIGVsZW1lbnQuY2xpY2soKS50aGVuKGZ1bmN0aW9uKCl7DQogICAgICAkYnJvd3Nlci53YWl0KGZ1bmN0aW9uKCkgew0KICAgICAgICByZXR1cm4gJGRyaXZlci51bnRpbC5lbGVtZW50TG9jYXRlZCgkZHJpdmVyLkJ5LnhwYXRoKCIvLypbY29udGFpbnModGV4dCgpLCdIZWxsbyEnKV0iKSk7DQogICAgICB9LCAxMDAwMCkudGhlbihmdW5jdGlvbigpIHsNCiAgICAgICAgY29uc29sZS5sb2coJ2ZvdW5kIGFqYXggcmVzcG9uc2UnKTsNCiAgICAgIH0pOw0KICAgIH0pOw0KICB9KTsNCn0pOw0KDQo="}'
  #     Environment:
  #       Variables:
  #         PAGE_URL: !Join
  #           - ''
  #           - - https://
  #             - !Ref ApiGatewayApi
  #             - '.execute-api.'
  #             - !Ref 'AWS::Region'
  #             - '.amazonaws.com/Prod'

  #
  # CodeDeploy Check: validate frontend has no errors before final rollout
  #
  PostTrafficHookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./post-traffic-hook
      Handler: index.handler
      Policies:
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "lambda:InvokeFunction"
            Resource: !Ref LambdaFunction.Version
      Runtime: nodejs6.10
      FunctionName: 'CodeDeployHook_postTrafficHook'
      DeploymentPreference:
        Enabled: false
      Environment:
        Variables:
          CurrentVersion: !Ref LambdaFunction.Version
          NEWRELIC_INSIGHTS_QUERY_KEY: !Ref NRInsightsQueryKey
          NEWRELIC_ACCOUNT_ID: !Ref NRAccountId

Outputs:
  ApiUrl:
    Description: URL of your API endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref ApiGatewayApi
        - '.execute-api.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/Prod'